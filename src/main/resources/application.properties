spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
server.port=8080
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
management.endpoint.health.show-details=always




spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#告诉 SpringBoot 当出现 404 错误时, 直接抛出异常.
spring.mvc.throw-exception-if-no-handler-found=true 
#告诉 SpringBoot 不要为我们工程中的资源文件建立映射.
spring.resources.add-mappings=false

#打印sql
logging.level.com.zhouyou.sb.mapper=DEBUG
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
pagehelper.page-size-zero=true
#通用mapper
mapper.mappers=com.zhouyou.sb.core.universal.Mapper


spring.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/user?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=CTT
spring.datasource.db1.username=root
spring.datasource.db1.password=123456
spring.datasource.db1.initialSize=5
spring.datasource.db1.minIdle=5
spring.datasource.db1.maxActive=20
#连接等待超时时间
spring.datasource.db1.maxWait=60000
#配置隔多久进行一次检测(检测可以关闭的空闲连接)
spring.datasource.db1.timeBetweenEvictionRunsMillis=60000
#配置连接在池中的最小生存时间
spring.datasource.db1.minEvictableIdleTimeMillis=300000
spring.datasource.db1.validationQuery=SELECT 1 FROM DUAL
spring.datasource.db1.testWhileIdle=true
spring.datasource.db1.testOnBorrow=false
spring.datasource.db1.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.db1.poolPreparedStatements=true
spring.datasource.db1.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.db1.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.db1.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


spring.datasource.db2.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db2.url=jdbc:mysql://127.0.0.1:3306/user?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=CTT
spring.datasource.db2.username=root
spring.datasource.db2.password=123456
spring.datasource.db2.initialSize=5
spring.datasource.db2.minIdle=5
spring.datasource.db2.maxActive=20
#连接等待超时时间
spring.datasource.db2.maxWait=60000
#配置隔多久进行一次检测(检测可以关闭的空闲连接)
spring.datasource.db2.timeBetweenEvictionRunsMillis=60000
#配置连接在池中的最小生存时间
spring.datasource.db2.minEvictableIdleTimeMillis=300000
spring.datasource.db2.validationQuery=SELECT 1 FROM DUAL
spring.datasource.db2.testWhileIdle=true
spring.datasource.db2.testOnBorrow=false
spring.datasource.db2.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.db2.poolPreparedStatements=true
spring.datasource.db2.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.db2.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.db2.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.timeout=0
spring.redis.password=


#shiro配置
#用户未登录
shiro.loginUrl=/shiroUtils/noLogin
#用户没有权限
shiro.unauthorizedUrl=/shiroUtils/noAuthorize

#邮件配置
spring.mail.protocol=smtp
spring.mail.host=smtp.163.com
#这里换成自己的邮箱类型   例如qq邮箱就写smtp.qq.com
spring.mail.port=25
spring.mail.smtpAuth=true
spring.mail.smtpStarttlsEnable=true
spring.mail.smtpSslTrust=smtp.163.com
#这里换成自己的邮箱类型   例如qq邮箱就写smtp.qq.com
spring.mail.username=15756245076@163.com
#这里换成自己的邮箱账号
spring.mail.password=HKSRVAXSPAYXDSMT
#这里换成自己的邮箱密码或授权码   授权码获取可以百度